//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medikit.Security.Cryptography.Pkcs.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à String cannot be empty or null..
        /// </summary>
        public static string Arg_EmptyOrNullString {
            get {
                return ResourceManager.GetString("Arg_EmptyOrNullString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Only single dimensional arrays are supported for the requested action..
        /// </summary>
        public static string Arg_RankMultiDimNotSupported {
            get {
                return ResourceManager.GetString("Arg_RankMultiDimNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The destination is too small to hold the encoded value..
        /// </summary>
        public static string Argument_EncodeDestinationTooSmall {
            get {
                return ResourceManager.GetString("Argument_EncodeDestinationTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        public static string Argument_InvalidOffLen {
            get {
                return ResourceManager.GetString("Argument_InvalidOffLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The OID value was invalid..
        /// </summary>
        public static string Argument_InvalidOidValue {
            get {
                return ResourceManager.GetString("Argument_InvalidOidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Value was invalid..
        /// </summary>
        public static string Argument_InvalidValue {
            get {
                return ResourceManager.GetString("Argument_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Index was out of range. Must be non-negative and less than the size of the collection..
        /// </summary>
        public static string ArgumentOutOfRange_Index {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Positive number required..
        /// </summary>
        public static string ArgumentOutOfRange_NeedPosNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedPosNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The KDF for algorithm &apos;{0}&apos; requires a char-based password input..
        /// </summary>
        public static string Cryptography_AlgKdfRequiresChars {
            get {
                return ResourceManager.GetString("Cryptography_AlgKdfRequiresChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ASN.1 Enumerated values only apply to enum types without the [Flags] attribute..
        /// </summary>
        public static string Cryptography_Asn_EnumeratedValueRequiresNonFlagsEnum {
            get {
                return ResourceManager.GetString("Cryptography_Asn_EnumeratedValueRequiresNonFlagsEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Named bit list operations require an enum with the [Flags] attribute..
        /// </summary>
        public static string Cryptography_Asn_NamedBitListRequiresFlagsEnum {
            get {
                return ResourceManager.GetString("Cryptography_Asn_NamedBitListRequiresFlagsEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The encoded named bit list value is larger than the value size of the &apos;{0}&apos; enum..
        /// </summary>
        public static string Cryptography_Asn_NamedBitListValueTooBig {
            get {
                return ResourceManager.GetString("Cryptography_Asn_NamedBitListValueTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tags with TagClass Universal must have the appropriate TagValue value for the data type being read or written..
        /// </summary>
        public static string Cryptography_Asn_UniversalValueIsFixed {
            get {
                return ResourceManager.GetString("Cryptography_Asn_UniversalValueIsFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unused bit count must be between 0 and 7, inclusive..
        /// </summary>
        public static string Cryptography_Asn_UnusedBitCountRange {
            get {
                return ResourceManager.GetString("Cryptography_Asn_UnusedBitCountRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Encode cannot be called while a Sequence or SetOf is still open..
        /// </summary>
        public static string Cryptography_AsnWriter_EncodeUnbalancedStack {
            get {
                return ResourceManager.GetString("Cryptography_AsnWriter_EncodeUnbalancedStack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cannot pop the requested tag as it is not currently in progress..
        /// </summary>
        public static string Cryptography_AsnWriter_PopWrongTag {
            get {
                return ResourceManager.GetString("Cryptography_AsnWriter_PopWrongTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The hash value is not correct..
        /// </summary>
        public static string Cryptography_BadHashValue {
            get {
                return ResourceManager.GetString("Cryptography_BadHashValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid signature..
        /// </summary>
        public static string Cryptography_BadSignature {
            get {
                return ResourceManager.GetString("Cryptography_BadSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not determine signature algorithm for the signer certificate..
        /// </summary>
        public static string Cryptography_Cms_CannotDetermineSignatureAlgorithm {
            get {
                return ResourceManager.GetString("Cryptography_Cms_CannotDetermineSignatureAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate already present in the collection..
        /// </summary>
        public static string Cryptography_Cms_CertificateAlreadyInCollection {
            get {
                return ResourceManager.GetString("Cryptography_Cms_CertificateAlreadyInCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The certificate chain is incomplete, the self-signed root authority could not be determined..
        /// </summary>
        public static string Cryptography_Cms_IncompleteCertChain {
            get {
                return ResourceManager.GetString("Cryptography_Cms_IncompleteCertChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid originator identifier choice {0} found in decoded CMS..
        /// </summary>
        public static string Cryptography_Cms_Invalid_Originator_Identifier_Choice {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Invalid_Originator_Identifier_Choice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The subject identifier type {0} is not valid..
        /// </summary>
        public static string Cryptography_Cms_Invalid_Subject_Identifier_Type {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Invalid_Subject_Identifier_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid cryptographic message type..
        /// </summary>
        public static string Cryptography_Cms_InvalidMessageType {
            get {
                return ResourceManager.GetString("Cryptography_Cms_InvalidMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SignerInfo digest algorithm &apos;{0}&apos; is not valid for signature algorithm &apos;{1}&apos;..
        /// </summary>
        public static string Cryptography_Cms_InvalidSignerHashForSignatureAlg {
            get {
                return ResourceManager.GetString("Cryptography_Cms_InvalidSignerHashForSignatureAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Date property is not available for none KID key agree recipient..
        /// </summary>
        public static string Cryptography_Cms_Key_Agree_Date_Not_Available {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Key_Agree_Date_Not_Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An RSA key is required to decrypt for a RecipientInfo with a KeyTransport recipient type..
        /// </summary>
        public static string Cryptography_Cms_Ktri_RSARequired {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Ktri_RSARequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The CMS message is not encrypted..
        /// </summary>
        public static string Cryptography_Cms_MessageNotEncrypted {
            get {
                return ResourceManager.GetString("Cryptography_Cms_MessageNotEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The CMS message is not signed..
        /// </summary>
        public static string Cryptography_Cms_MessageNotSigned {
            get {
                return ResourceManager.GetString("Cryptography_Cms_MessageNotSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The cryptographic message does not contain an expected authenticated attribute..
        /// </summary>
        public static string Cryptography_Cms_MissingAuthenticatedAttribute {
            get {
                return ResourceManager.GetString("Cryptography_Cms_MissingAuthenticatedAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Attribute not found..
        /// </summary>
        public static string Cryptography_Cms_NoAttributeFound {
            get {
                return ResourceManager.GetString("Cryptography_Cms_NoAttributeFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate not found..
        /// </summary>
        public static string Cryptography_Cms_NoCertificateFound {
            get {
                return ResourceManager.GetString("Cryptography_Cms_NoCertificateFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Only one level of counter-signatures are supported on this platform..
        /// </summary>
        public static string Cryptography_Cms_NoCounterCounterSigner {
            get {
                return ResourceManager.GetString("Cryptography_Cms_NoCounterCounterSigner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The recipients collection is empty. You must specify at least one recipient. This platform does not implement the certificate picker UI..
        /// </summary>
        public static string Cryptography_Cms_NoRecipients {
            get {
                return ResourceManager.GetString("Cryptography_Cms_NoRecipients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The signed cryptographic message does not have a signer for the specified signer index..
        /// </summary>
        public static string Cryptography_Cms_NoSignerAtIndex {
            get {
                return ResourceManager.GetString("Cryptography_Cms_NoSignerAtIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No signer certificate was provided. This platform does not implement the certificate picker UI..
        /// </summary>
        public static string Cryptography_Cms_NoSignerCert {
            get {
                return ResourceManager.GetString("Cryptography_Cms_NoSignerCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No signer certificate was provided..
        /// </summary>
        public static string Cryptography_Cms_NoSignerCertSilent {
            get {
                return ResourceManager.GetString("Cryptography_Cms_NoSignerCertSilent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An RSA certificate is required for a CmsRecipient when used with RSAEncryptionPadding..
        /// </summary>
        public static string Cryptography_Cms_Recipient_RSARequired_RSAPaddingModeSupplied {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Recipient_RSARequired_RSAPaddingModeSupplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The enveloped-data message does not contain the specified recipient..
        /// </summary>
        public static string Cryptography_Cms_RecipientNotFound {
            get {
                return ResourceManager.GetString("Cryptography_Cms_RecipientNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The recipient type &apos;{0}&apos; is not supported for encryption or decryption on this platform..
        /// </summary>
        public static string Cryptography_Cms_RecipientType_NotSupported {
            get {
                return ResourceManager.GetString("Cryptography_Cms_RecipientType_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cannot create CMS signature for empty content..
        /// </summary>
        public static string Cryptography_Cms_Sign_Empty_Content {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Sign_Empty_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CmsSigner has to be the first signer with NoSignature..
        /// </summary>
        public static string Cryptography_Cms_Sign_No_Signature_First_Signer {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Sign_No_Signature_First_Signer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cannot find the original signer..
        /// </summary>
        public static string Cryptography_Cms_SignerNotFound {
            get {
                return ResourceManager.GetString("Cryptography_Cms_SignerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A certificate with a private key is required..
        /// </summary>
        public static string Cryptography_Cms_Signing_RequiresPrivateKey {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Signing_RequiresPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate trust could not be established. The first reported error is: {0}.
        /// </summary>
        public static string Cryptography_Cms_TrustFailure {
            get {
                return ResourceManager.GetString("Cryptography_Cms_TrustFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown algorithm &apos;{0}&apos;..
        /// </summary>
        public static string Cryptography_Cms_UnknownAlgorithm {
            get {
                return ResourceManager.GetString("Cryptography_Cms_UnknownAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to determine the type of key handle from this keyspec {0}..
        /// </summary>
        public static string Cryptography_Cms_UnknownKeySpec {
            get {
                return ResourceManager.GetString("Cryptography_Cms_UnknownKeySpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The certificate is not valid for the requested usage..
        /// </summary>
        public static string Cryptography_Cms_WrongKeyUsage {
            get {
                return ResourceManager.GetString("Cryptography_Cms_WrongKeyUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ASN1 corrupted data..
        /// </summary>
        public static string Cryptography_Der_Invalid_Encoding {
            get {
                return ResourceManager.GetString("Cryptography_Der_Invalid_Encoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The string contains a character not in the 7 bit ASCII character set..
        /// </summary>
        public static string Cryptography_Invalid_IA5String {
            get {
                return ResourceManager.GetString("Cryptography_Invalid_IA5String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key is not a valid public or private key..
        /// </summary>
        public static string Cryptography_NotValidPublicOrPrivateKey {
            get {
                return ResourceManager.GetString("Cryptography_NotValidPublicOrPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid signature paramters..
        /// </summary>
        public static string Cryptography_Pkcs_InvalidSignatureParameters {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs_InvalidSignatureParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This platform requires that the PSS hash algorithm ({0}) match the data digest algorithm ({1})..
        /// </summary>
        public static string Cryptography_Pkcs_PssParametersHashMismatch {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs_PssParametersHashMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This platform does not support the MGF hash algorithm ({0}) being different from the signature hash algorithm ({1})..
        /// </summary>
        public static string Cryptography_Pkcs_PssParametersMgfHashMismatch {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs_PssParametersMgfHashMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mask generation function &apos;{0}&apos; is not supported by this platform..
        /// </summary>
        public static string Cryptography_Pkcs_PssParametersMgfNotSupported {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs_PssParametersMgfNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PSS parameters were not present..
        /// </summary>
        public static string Cryptography_Pkcs_PssParametersMissing {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs_PssParametersMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PSS salt size {0} is not supported by this platform with hash algorithm {1}..
        /// </summary>
        public static string Cryptography_Pkcs_PssParametersSaltMismatch {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs_PssParametersSaltMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This operation is not valid on an encrypted or enveloped Pkcs12SafeContents..
        /// </summary>
        public static string Cryptography_Pkcs12_CannotProcessEncryptedSafeContents {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_CannotProcessEncryptedSafeContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Pkcs12CertBag contents are not an X.509 certificate..
        /// </summary>
        public static string Cryptography_Pkcs12_CertBagNotX509 {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_CertBagNotX509", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Pkcs12Builder can no longer be modified because one of the Seal methods was already invoked..
        /// </summary>
        public static string Cryptography_Pkcs12_PfxIsSealed {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_PfxIsSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à One of the Seal methods must be invoked on the Pkcs12Builder before invoking an Encode method..
        /// </summary>
        public static string Cryptography_Pkcs12_PfxMustBeSealed {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_PfxMustBeSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cannot enumerate the contents of an encrypted or enveloped Pkcs12SafeContents..
        /// </summary>
        public static string Cryptography_Pkcs12_SafeContentsIsEncrypted {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_SafeContentsIsEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New Pkcs12SafeBag values cannot be added to a Pkcs12SafeContents that was read from existing data..
        /// </summary>
        public static string Cryptography_Pkcs12_SafeContentsIsReadOnly {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_SafeContentsIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This decryption operation applies to &apos;Pkcs12ConfidentialityMode.{0}&apos;, but the target object is in &apos;Pkcs12ConfidentialityMode.{1}&apos;..
        /// </summary>
        public static string Cryptography_Pkcs12_WrongModeForDecrypt {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_WrongModeForDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This verification operation applies to &apos;Pkcs12IntegrityMode.{0}&apos;, but the target object is in &apos;Pkcs12IntegrityMode.{1}&apos;..
        /// </summary>
        public static string Cryptography_Pkcs12_WrongModeForVerify {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs12_WrongModeForVerify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The EncryptedPrivateKeyInfo structure was decoded but was not successfully interpreted, the password may be incorrect..
        /// </summary>
        public static string Cryptography_Pkcs8_EncryptedReadFailed {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs8_EncryptedReadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The parameter should be a PKCS 9 attribute..
        /// </summary>
        public static string Cryptography_Pkcs9_AttributeMismatch {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs9_AttributeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cannot add multiple PKCS 9 signing time attributes..
        /// </summary>
        public static string Cryptography_Pkcs9_MultipleSigningTimeNotAllowed {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs9_MultipleSigningTimeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The response from the timestamping server did not match the request nonce..
        /// </summary>
        public static string Cryptography_TimestampReq_BadNonce {
            get {
                return ResourceManager.GetString("Cryptography_TimestampReq_BadNonce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The response from the timestamping server was not understood..
        /// </summary>
        public static string Cryptography_TimestampReq_BadResponse {
            get {
                return ResourceManager.GetString("Cryptography_TimestampReq_BadResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The timestamping server did not grant the request. The request status is &apos;{0}&apos; with failure info &apos;{1}&apos;..
        /// </summary>
        public static string Cryptography_TimestampReq_Failure {
            get {
                return ResourceManager.GetString("Cryptography_TimestampReq_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The timestamping request required the TSA certificate in the response, but it was not found..
        /// </summary>
        public static string Cryptography_TimestampReq_NoCertFound {
            get {
                return ResourceManager.GetString("Cryptography_TimestampReq_NoCertFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The timestamping request required the TSA certificate not be included in the response, but certificates were present..
        /// </summary>
        public static string Cryptography_TimestampReq_UnexpectedCertFound {
            get {
                return ResourceManager.GetString("Cryptography_TimestampReq_UnexpectedCertFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The algorithm identified by &apos;{0}&apos; is unknown, not valid for the requested usage, or was not handled..
        /// </summary>
        public static string Cryptography_UnknownAlgorithmIdentifier {
            get {
                return ResourceManager.GetString("Cryptography_UnknownAlgorithmIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &apos;{0}&apos; is not a known hash algorithm..
        /// </summary>
        public static string Cryptography_UnknownHashAlgorithm {
            get {
                return ResourceManager.GetString("Cryptography_UnknownHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The input to WriteEncodedValue must represent a single encoded value with no trailing data..
        /// </summary>
        public static string Cryptography_WriteEncodedValue_OneValueAtATime {
            get {
                return ResourceManager.GetString("Cryptography_WriteEncodedValue_OneValueAtATime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Duplicate items are not allowed in the collection..
        /// </summary>
        public static string InvalidOperation_DuplicateItemNotAllowed {
            get {
                return ResourceManager.GetString("InvalidOperation_DuplicateItemNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AsnEncodedData element in the collection has wrong Oid value: expected = &apos;{0}&apos;, actual = &apos;{1}&apos;..
        /// </summary>
        public static string InvalidOperation_WrongOidInAsnCollection {
            get {
                return ResourceManager.GetString("InvalidOperation_WrongOidInAsnCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Medikit.Security.Cryptography.Pkcs is only supported on Windows platforms..
        /// </summary>
        public static string PlatformNotSupported_CryptographyPkcs {
            get {
                return ResourceManager.GetString("PlatformNotSupported_CryptographyPkcs", resourceCulture);
            }
        }
    }
}
