//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medikit.EID.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Global {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Global() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Medikit.EID.Resources.Global", typeof(Global).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ADPU response error &apos;{0}&apos;.
        /// </summary>
        internal static string AdpuResponseError {
            get {
                return ResourceManager.GetString("AdpuResponseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The transaction cannot be started.
        /// </summary>
        internal static string CannotStartTransaction {
            get {
                return ResourceManager.GetString("CannotStartTransaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CLA not supported.
        /// </summary>
        internal static string CLANotSupported {
            get {
                return ResourceManager.GetString("CLANotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Command not available within the current life cycle.
        /// </summary>
        internal static string CommandNotAvailable {
            get {
                return ResourceManager.GetString("CommandNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Context is not established.
        /// </summary>
        internal static string ContextNotEstablished {
            get {
                return ResourceManager.GetString("ContextNotEstablished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à EEPROM corrupted (followed by a temporary mute state).
        /// </summary>
        internal static string EEPromCorrupted {
            get {
                return ResourceManager.GetString("EEPromCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File not found.
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lc inconsistent with P1-P2.
        /// </summary>
        internal static string LCInconsistentP1P2 {
            get {
                return ResourceManager.GetString("LCInconsistentP1P2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No connection is established.
        /// </summary>
        internal static string NoEstablishedConnection {
            get {
                return ResourceManager.GetString("NoEstablishedConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No precise diagnostic.
        /// </summary>
        internal static string NoPreciseDiagnostic {
            get {
                return ResourceManager.GetString("NoPreciseDiagnostic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected file is not activated.
        /// </summary>
        internal static string SelectedFileNotActivated {
            get {
                return ResourceManager.GetString("SelectedFileNotActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SET (select algorithm and private key) error.
        /// </summary>
        internal static string SelectPrivateKeyError {
            get {
                return ResourceManager.GetString("SelectPrivateKeyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wrong length &apos;{0}&apos;.
        /// </summary>
        internal static string WrongLength {
            get {
                return ResourceManager.GetString("WrongLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wrong parameter P1-P2.
        /// </summary>
        internal static string WrongParameterP1P2 {
            get {
                return ResourceManager.GetString("WrongParameterP1P2", resourceCulture);
            }
        }
    }
}
